#!/usr/bin/perl
#
# convert critical curve data generated by glafic to ds9 contour files
#

if((($#ARGV+1)!=1)&&(($#ARGV+1)!=2)){
 die "usage:\n > conv_crit_dat2con.pl model_hoge.input [out_hoge_crit.dat]\n    [out_hoge_crit.dat] is optional\n";
}

## check model_hoge.input file
open(IN,"$ARGV[0]") || die "File Not Found\n";

$ra0="";
$dec0="";
while(<IN>){
    if(substr($_,0,1)  ne '#'){
        @data=split;
        
        $com=$data[0];
	if($com eq 'prefix'){ $prefix=$data[1]; }
        if($com eq 'wcs_ra0'){  $ra0=$data[1]; }
        if($com eq 'wcs_dec0'){ $dec0=$data[1]; }
    }
}

close(IN);

if($ra0 =~ /[0-9]/){
    printf "use WCS (ra0: %s , dec0 %s)\n",$ra0,$dec0; 
} else {
    printf "use relative coordinates\n";
}

## read crit file, write con file
if(($#ARGV+1)==1){
    $fc=sprintf("%s_crit.dat",$prefix);
} else {
    $fc=$ARGV[1];
}

open(IN,"$fc") || die "File Not Found\n";

$f1="ds9crit_".$fc;
$f2="ds9caus_".$fc;

$f1 =~ s/.dat/.con/g;
$f2 =~ s/.dat/.con/g;

printf("input crit file          : %s\n",$fc);
printf("output critical line file: %s\n",$f1);
printf("output caustics file     : %s\n",$f2);

if($ra0 =~ /[0-9]/){
    $cdec=cos((3.141592/180.0)*$dec0);
}

open(OUT1,">$f1") || die "Failed at Open\n";
open(OUT2,">$f2") || die "Failed at Open\n";

while(<IN>){
    @data=split;
    if($ra0 =~ /[0-9]/){
	$xx=$data[0]*(-1.0)/(3600.0*$cdec)+$ra0;
	$yy=$data[1]/(3600.0)+$dec0;
	print OUT1 "$xx $yy\n";
	$xx=$data[4]*(-1.0)/(3600.0*$cdec)+$ra0;
	$yy=$data[5]/(3600.0)+$dec0;
	print OUT1 "$xx $yy\n\n";
	$xx=$data[2]*(-1.0)/(3600.0*$cdec)+$ra0;
	$yy=$data[3]/(3600.0)+$dec0;
	print OUT2 "$xx $yy\n";
	$xx=$data[6]*(-1.0)/(3600.0*$cdec)+$ra0;
	$yy=$data[7]/(3600.0)+$dec0;
	print OUT2 "$xx $yy\n\n";
    } else {
	print OUT1 "$data[0] $data[1]\n";
	print OUT1 "$data[4] $data[5]\n\n";
	print OUT2 "$data[2] $data[3]\n";
	print OUT2 "$data[6] $data[7]\n\n";
    }
}

close(IN);
close(OUT1);
close(OUT2);
